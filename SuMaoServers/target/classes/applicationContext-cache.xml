<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<context:property-placeholder location="classpath:conf.properties" />
	<!-- 配置系统管理类 -->
	<bean id="cacheManager" class="com.iscas.component.core.CacheManager">
		<property name="cacheProvider" ref="ehcacheCacheProvider" />
	</bean>

	<!-- 配置简keyMap缓存 start -->
	<bean id="simpleCacheProvider" class="com.iscas.component.core.cache.SimpleCacheProvider" />
	<!-- 配置简keyMap缓存 end -->

	<!--配置ehcache缓存start -->
	<bean id="ehcacheCacheProvider" class="com.iscas.component.core.cache.EhcacheCacheProvider">
		<property name="configLocation" value="/ehcache.xml"></property>
		<property name="cacheName" value="eternalCache" />
	</bean>
	<!--配置ehcache缓存end -->

	<!--配置redis缓存 start -->
	<bean id="redisCacheProvider" class="com.iscas.component.core.cache.RedisCacheProvider">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--<property name="maxActive" value="${redis.pool.maxActive}"/> -->
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<!--<property name="maxWait" value="${redis.pool.maxWait}"/> -->
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>
	<!--配置redis缓存 end -->
</beans>